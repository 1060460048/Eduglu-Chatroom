<?php

include_once('eduglu_chatroom.features.inc');

/**
 * Implementation of hook_menu().
 */
function eduglu_chatroom_menu() {
  $items = array();
  $items['chatroom'] = array(
    'title' => 'Chatroom',
    'page callback' => 'eduglu_chatroom_load',
    'page arguments' => array(),
    'access callback' => 'spaces_access_feature',
    'access arguments' => array('view', 'eduglu_chatroom'),
    'type' => MENU_NORMAL_ITEM,
    'menu_name' => 'features',
  );
  $items['eduglu_chatroom/users'] = array(
    'page callback' => 'eduglu_chatroom_get_user',
    'page arguments' => array(2),
    'access callback' => 'spaces_access_feature',
    'access arguments' => array('view', 'eduglu_chatroom'),
    'type' => MENU_CALLBACK,
  );
  return $items;
}

function eduglu_chatroom_load() {
  global $user;

  # Chatroom settings
  $space = spaces_get_space();
  # Todo once chats are stored in mysql, join that table as well to get all
  # additional ids that could of been used in the past.
  $results = db_query("SELECT u.uid, u.picture as pic, r.realname as name
    FROM og_uid o
    INNER JOIN realname r
    INNER JOIN users u
    WHERE o.uid = r.uid
    AND o.uid = u.uid
    AND o.nid = %d", $space->group->nid);

  $users = array();
  while ($row = db_fetch_object($results)) {
    $row->pic = eduglu_core_create_imagecache_url($row->pic,
      '25x25_crop', 'connected-users');
    $row->id = $row->uid;
    $users[] = $row;
  }

  // Check if the current user is in the array. If not return,
  // you have to be a member of the group to chat.
  // This is a pretty silly restriction but it's a somewhat complicated edge
  // case to account for and this is an experiment.
  $match = TRUE;
  foreach ($users as $u) {
    if ($u->uid === $user->uid) {
      $match = FALSE;
    }
  }
  if ($match) {
    return "You must join this group first before chatting.";
  }

  $key = rand(0, getrandmax());
  setcookie('rediskey', $key);
  $settings = array(
    'chatroom' => array(
      'group' => array(
        'name' => $space->group->title,
        'nid' => $space->group->nid,
        'users' => $users,
      ),
    )
  );

  drupal_add_css(drupal_get_path('module', 'eduglu_chatroom') . '/stylesheets/main.css', 'module');
  drupal_add_js(drupal_get_path('module', 'eduglu_chatroom') . '/brunch/build/web/js/app.js', 'module');
  drupal_add_js("require('main')", 'inline');
  // TODO move the socket.io url to a settings page.
  $load_socketio = <<<code
<script src="http://localhost:3000/socket.io/socket.io.js"></script>
code;
  drupal_set_html_head($load_socketio);

  drupal_add_js($settings, 'setting');


  eduglu_chatroom_post('newUser', array(
    'uid' => $user->uid,
    'group' => $space->group->nid,
    'key' => $key,
  ));

  return "connecting...";
}

/*
 * Function for posting info to node.js server.
 */
// TODO move url to config page.
function eduglu_chatroom_post($method, $data) {
  // Set some paramenters for sending request.
  $request_url = 'http://localhost:3000/drupal';
  $request_headers = array('Content-Type' => 'application/json');
  $request_method = 'POST';
  $request_retry = 3;
  $data['api_key'] = 'alsdjflaj24lj23l4j23ljljasdlfjasdf';

  $data = array(
    'method' => $method,
    'data' => $data,
  );


  $json_data = drupal_to_js($data);

  // Send the request.
  $result = drupal_http_request($request_url, $request_headers, $request_method, $json_data, $request_retry);
  /* print_r($result);*/
}

function eduglu_chatroom_get_user($uid) {
  static $user;
  if (!isset($user)) {
    if ($cache = cache_get('user_data_' . $uid) && !empty($cache->data)) {
      $user = unserialize($cache->data);
    }
    else {
      $results = db_query("SELECT u.uid, u.picture as pic, r.realname as name
        FROM realname r
        INNER JOIN users u
        WHERE r.uid = u.uid
        AND u.uid = %d", $uid);

      $user = array();
      while ($row = db_fetch_object($results)) {
        $row->pic = eduglu_core_create_imagecache_url($row->pic,
          '25x25_crop', 'connected-users');
        $row->id = $row->uid;
        $user = $row;
      }
    }
  }

  return $user;
}

/*
 * Implementation of hook_og().
 */
function eduglu_chatroom_og($op, $gid, $uid, $args) {
  $account = user_load($uid);
  $group_node = node_load($gid);
  switch ($op) {
    case 'user insert':
      $method = "addGroupie";
      $data = eduglu_chatroom_get_user($uid);
      $data->group = $gid;
      eduglu_chatroom_post($method, $data);
      break;

    case 'user delete':
      $method = "remGroupie";
      $data->uid = $uid;
      $data->group = $gid;
      eduglu_chatroom_post($method, $data);
      break;
  }
}
// TODO Add user profile integration so when someone updates their name, that change
// will be pushed automagically to all their groups.
